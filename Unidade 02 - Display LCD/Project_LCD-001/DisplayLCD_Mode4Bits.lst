;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 22/03/2020 00:51:29
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF001EF59  	GOTO        690
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_LCD_Enable:
;displayLCD.c,70 :: 		void LCD_Enable( void )
;displayLCD.c,72 :: 		Delay_us(40);
0x001C	0x0E1A      	MOVLW       26
0x001E	0x6E0D      	MOVWF       R13, 0
L_LCD_Enable3:
0x0020	0x2E0D      	DECFSZ      R13, 1, 0
0x0022	0xD7FE      	BRA         L_LCD_Enable3
0x0024	0x0000      	NOP
;displayLCD.c,73 :: 		LCD_EN_IO = 1;
0x0026	0x8284      	BSF         PORTE, 1 
;displayLCD.c,74 :: 		Delay_us(40);
0x0028	0x0E1A      	MOVLW       26
0x002A	0x6E0D      	MOVWF       R13, 0
L_LCD_Enable4:
0x002C	0x2E0D      	DECFSZ      R13, 1, 0
0x002E	0xD7FE      	BRA         L_LCD_Enable4
0x0030	0x0000      	NOP
;displayLCD.c,75 :: 		LCD_EN_IO = 0;
0x0032	0x9284      	BCF         PORTE, 1 
;displayLCD.c,76 :: 		Delay_us(40);
0x0034	0x0E1A      	MOVLW       26
0x0036	0x6E0D      	MOVWF       R13, 0
L_LCD_Enable5:
0x0038	0x2E0D      	DECFSZ      R13, 1, 0
0x003A	0xD7FE      	BRA         L_LCD_Enable5
0x003C	0x0000      	NOP
;displayLCD.c,77 :: 		}
L_end_LCD_Enable:
0x003E	0x0012      	RETURN      0
; end of _LCD_Enable
_LCD_Write_Data:
;displayLCD.c,86 :: 		void LCD_Write_Data( unsigned char RS, unsigned char Data )
;displayLCD.c,88 :: 		LCD_RS_IO = RS;            //RS = 0: Comando a ser processado  |  RS = 1: Caractere a ser impresso
0x0040	0xB03B      	BTFSC       FARG_LCD_Write_Data_RS, 0 
0x0042	0xD002      	BRA         L__LCD_Write_Data21
0x0044	0x9484      	BCF         PORTE, 2 
0x0046	0xD001      	BRA         L__LCD_Write_Data22
L__LCD_Write_Data21:
0x0048	0x8484      	BSF         PORTE, 2 
L__LCD_Write_Data22:
;displayLCD.c,90 :: 		Delay_ms(2);
0x004A	0x0E06      	MOVLW       6
0x004C	0x6E0C      	MOVWF       R12, 0
0x004E	0x0E30      	MOVLW       48
0x0050	0x6E0D      	MOVWF       R13, 0
L_LCD_Write_Data6:
0x0052	0x2E0D      	DECFSZ      R13, 1, 0
0x0054	0xD7FE      	BRA         L_LCD_Write_Data6
0x0056	0x2E0C      	DECFSZ      R12, 1, 0
0x0058	0xD7FC      	BRA         L_LCD_Write_Data6
0x005A	0x0000      	NOP
;displayLCD.c,91 :: 		LCD_DATA4_IO = ((Data & 0x10) == 0x10);
0x005C	0x0E10      	MOVLW       16
0x005E	0x143C      	ANDWF       FARG_LCD_Write_Data_Data, 0 
0x0060	0x6E01      	MOVWF       R1 
0x0062	0x5001      	MOVF        R1, 0 
0x0064	0x0A10      	XORLW       16
0x0066	0x0E01      	MOVLW       1
0x0068	0xA4D8      	BTFSS       STATUS, 2 
0x006A	0x0E00      	MOVLW       0
0x006C	0x6E00      	MOVWF       R0 
0x006E	0xB000      	BTFSC       R0, 0 
0x0070	0xD002      	BRA         L__LCD_Write_Data23
0x0072	0x9883      	BCF         PORTD, 4 
0x0074	0xD001      	BRA         L__LCD_Write_Data24
L__LCD_Write_Data23:
0x0076	0x8883      	BSF         PORTD, 4 
L__LCD_Write_Data24:
;displayLCD.c,92 :: 		LCD_DATA5_IO = ((Data & 0x20) == 0x20);
0x0078	0x0E20      	MOVLW       32
0x007A	0x143C      	ANDWF       FARG_LCD_Write_Data_Data, 0 
0x007C	0x6E01      	MOVWF       R1 
0x007E	0x5001      	MOVF        R1, 0 
0x0080	0x0A20      	XORLW       32
0x0082	0x0E01      	MOVLW       1
0x0084	0xA4D8      	BTFSS       STATUS, 2 
0x0086	0x0E00      	MOVLW       0
0x0088	0x6E00      	MOVWF       R0 
0x008A	0xB000      	BTFSC       R0, 0 
0x008C	0xD002      	BRA         L__LCD_Write_Data25
0x008E	0x9A83      	BCF         PORTD, 5 
0x0090	0xD001      	BRA         L__LCD_Write_Data26
L__LCD_Write_Data25:
0x0092	0x8A83      	BSF         PORTD, 5 
L__LCD_Write_Data26:
;displayLCD.c,93 :: 		LCD_DATA6_IO = ((Data & 0x40) == 0x40);
0x0094	0x0E40      	MOVLW       64
0x0096	0x143C      	ANDWF       FARG_LCD_Write_Data_Data, 0 
0x0098	0x6E01      	MOVWF       R1 
0x009A	0x5001      	MOVF        R1, 0 
0x009C	0x0A40      	XORLW       64
0x009E	0x0E01      	MOVLW       1
0x00A0	0xA4D8      	BTFSS       STATUS, 2 
0x00A2	0x0E00      	MOVLW       0
0x00A4	0x6E00      	MOVWF       R0 
0x00A6	0xB000      	BTFSC       R0, 0 
0x00A8	0xD002      	BRA         L__LCD_Write_Data27
0x00AA	0x9C83      	BCF         PORTD, 6 
0x00AC	0xD001      	BRA         L__LCD_Write_Data28
L__LCD_Write_Data27:
0x00AE	0x8C83      	BSF         PORTD, 6 
L__LCD_Write_Data28:
;displayLCD.c,94 :: 		LCD_DATA7_IO = ((Data & 0x80) == 0x80);
0x00B0	0x0E80      	MOVLW       128
0x00B2	0x143C      	ANDWF       FARG_LCD_Write_Data_Data, 0 
0x00B4	0x6E01      	MOVWF       R1 
0x00B6	0x5001      	MOVF        R1, 0 
0x00B8	0x0A80      	XORLW       128
0x00BA	0x0E01      	MOVLW       1
0x00BC	0xA4D8      	BTFSS       STATUS, 2 
0x00BE	0x0E00      	MOVLW       0
0x00C0	0x6E00      	MOVWF       R0 
0x00C2	0xB000      	BTFSC       R0, 0 
0x00C4	0xD002      	BRA         L__LCD_Write_Data29
0x00C6	0x9E83      	BCF         PORTD, 7 
0x00C8	0xD001      	BRA         L__LCD_Write_Data30
L__LCD_Write_Data29:
0x00CA	0x8E83      	BSF         PORTD, 7 
L__LCD_Write_Data30:
;displayLCD.c,96 :: 		LCD_Enable();     //Executa um clock no LCD
0x00CC	0xDFA7      	RCALL       _LCD_Enable
;displayLCD.c,98 :: 		Data = Data << 4;     //Rotaciona o nibble LSB para a posição do nibble MSB
0x00CE	0xF002C03C  	MOVFF       FARG_LCD_Write_Data_Data, R2
0x00D2	0x3602      	RLCF        R2, 1 
0x00D4	0x9002      	BCF         R2, 0 
0x00D6	0x3602      	RLCF        R2, 1 
0x00D8	0x9002      	BCF         R2, 0 
0x00DA	0x3602      	RLCF        R2, 1 
0x00DC	0x9002      	BCF         R2, 0 
0x00DE	0x3602      	RLCF        R2, 1 
0x00E0	0x9002      	BCF         R2, 0 
0x00E2	0xF03CC002  	MOVFF       R2, FARG_LCD_Write_Data_Data
;displayLCD.c,99 :: 		LCD_DATA4_IO = ((Data & 0x10) == 0x10);
0x00E6	0x0E10      	MOVLW       16
0x00E8	0x1402      	ANDWF       R2, 0 
0x00EA	0x6E01      	MOVWF       R1 
0x00EC	0x5001      	MOVF        R1, 0 
0x00EE	0x0A10      	XORLW       16
0x00F0	0x0E01      	MOVLW       1
0x00F2	0xA4D8      	BTFSS       STATUS, 2 
0x00F4	0x0E00      	MOVLW       0
0x00F6	0x6E00      	MOVWF       R0 
0x00F8	0xB000      	BTFSC       R0, 0 
0x00FA	0xD002      	BRA         L__LCD_Write_Data31
0x00FC	0x9883      	BCF         PORTD, 4 
0x00FE	0xD001      	BRA         L__LCD_Write_Data32
L__LCD_Write_Data31:
0x0100	0x8883      	BSF         PORTD, 4 
L__LCD_Write_Data32:
;displayLCD.c,100 :: 		LCD_DATA5_IO = ((Data & 0x20) == 0x20);
0x0102	0x0E20      	MOVLW       32
0x0104	0x1402      	ANDWF       R2, 0 
0x0106	0x6E01      	MOVWF       R1 
0x0108	0x5001      	MOVF        R1, 0 
0x010A	0x0A20      	XORLW       32
0x010C	0x0E01      	MOVLW       1
0x010E	0xA4D8      	BTFSS       STATUS, 2 
0x0110	0x0E00      	MOVLW       0
0x0112	0x6E00      	MOVWF       R0 
0x0114	0xB000      	BTFSC       R0, 0 
0x0116	0xD002      	BRA         L__LCD_Write_Data33
0x0118	0x9A83      	BCF         PORTD, 5 
0x011A	0xD001      	BRA         L__LCD_Write_Data34
L__LCD_Write_Data33:
0x011C	0x8A83      	BSF         PORTD, 5 
L__LCD_Write_Data34:
;displayLCD.c,101 :: 		LCD_DATA6_IO = ((Data & 0x40) == 0x40);
0x011E	0x0E40      	MOVLW       64
0x0120	0x1402      	ANDWF       R2, 0 
0x0122	0x6E01      	MOVWF       R1 
0x0124	0x5001      	MOVF        R1, 0 
0x0126	0x0A40      	XORLW       64
0x0128	0x0E01      	MOVLW       1
0x012A	0xA4D8      	BTFSS       STATUS, 2 
0x012C	0x0E00      	MOVLW       0
0x012E	0x6E00      	MOVWF       R0 
0x0130	0xB000      	BTFSC       R0, 0 
0x0132	0xD002      	BRA         L__LCD_Write_Data35
0x0134	0x9C83      	BCF         PORTD, 6 
0x0136	0xD001      	BRA         L__LCD_Write_Data36
L__LCD_Write_Data35:
0x0138	0x8C83      	BSF         PORTD, 6 
L__LCD_Write_Data36:
;displayLCD.c,102 :: 		LCD_DATA7_IO = ((Data & 0x80) == 0x80);
0x013A	0x0E80      	MOVLW       128
0x013C	0x1402      	ANDWF       R2, 0 
0x013E	0x6E01      	MOVWF       R1 
0x0140	0x5001      	MOVF        R1, 0 
0x0142	0x0A80      	XORLW       128
0x0144	0x0E01      	MOVLW       1
0x0146	0xA4D8      	BTFSS       STATUS, 2 
0x0148	0x0E00      	MOVLW       0
0x014A	0x6E00      	MOVWF       R0 
0x014C	0xB000      	BTFSC       R0, 0 
0x014E	0xD002      	BRA         L__LCD_Write_Data37
0x0150	0x9E83      	BCF         PORTD, 7 
0x0152	0xD001      	BRA         L__LCD_Write_Data38
L__LCD_Write_Data37:
0x0154	0x8E83      	BSF         PORTD, 7 
L__LCD_Write_Data38:
;displayLCD.c,104 :: 		LCD_Enable();     //Executa um clock no LCD
0x0156	0xDF62      	RCALL       _LCD_Enable
;displayLCD.c,110 :: 		}
L_end_LCD_Write_Data:
0x0158	0x0012      	RETURN      0
; end of _LCD_Write_Data
_DisplayLCD_Char_CP:
;displayLCD.c,163 :: 		void DisplayLCD_Char_CP( unsigned char Tchar )
;displayLCD.c,165 :: 		LCD_Write_Data(1, Tchar);   //RS = 1: Dado a ser escritio
0x015A	0x0E01      	MOVLW       1
0x015C	0x6E3B      	MOVWF       FARG_LCD_Write_Data_RS 
0x015E	0xF03CC039  	MOVFF       FARG_DisplayLCD_Char_CP_Tchar, FARG_LCD_Write_Data_Data
0x0162	0xDF6E      	RCALL       _LCD_Write_Data
;displayLCD.c,166 :: 		}
L_end_DisplayLCD_Char_CP:
0x0164	0x0012      	RETURN      0
; end of _DisplayLCD_Char_CP
_DisplayLCD_Cmd:
;displayLCD.c,80 :: 		void DisplayLCD_Cmd( unsigned char Cmd )
;displayLCD.c,82 :: 		LCD_Write_Data(0, Cmd);   //RS = 0: Comando a ser processado
0x0166	0x6A3B      	CLRF        FARG_LCD_Write_Data_RS 
0x0168	0xF03CC039  	MOVFF       FARG_DisplayLCD_Cmd_Cmd, FARG_LCD_Write_Data_Data
0x016C	0xDF69      	RCALL       _LCD_Write_Data
;displayLCD.c,83 :: 		}
L_end_DisplayLCD_Cmd:
0x016E	0x0012      	RETURN      0
; end of _DisplayLCD_Cmd
_DisplayLCD_Print_CP:
;displayLCD.c,133 :: 		void DisplayLCD_Print_CP(unsigned char * pStr)
;displayLCD.c,135 :: 		while(*pStr)   //Loop até encontrar o caractere NULL (ZERO)
L_DisplayLCD_Print_CP11:
0x0170	0xFFE9C039  	MOVFF       FARG_DisplayLCD_Print_CP_pStr, FSR0L
0x0174	0xFFEAC03A  	MOVFF       FARG_DisplayLCD_Print_CP_pStr+1, FSR0H
0x0178	0x52EE      	MOVF        POSTINC0, 1 
0x017A	0xE00C      	BZ          L_DisplayLCD_Print_CP12
;displayLCD.c,137 :: 		LCD_Write_Data(1, *pStr);    //RS = 0 corresponde a escrever dado no LCD
0x017C	0x0E01      	MOVLW       1
0x017E	0x6E3B      	MOVWF       FARG_LCD_Write_Data_RS 
0x0180	0xFFE9C039  	MOVFF       FARG_DisplayLCD_Print_CP_pStr, FSR0L
0x0184	0xFFEAC03A  	MOVFF       FARG_DisplayLCD_Print_CP_pStr+1, FSR0H
0x0188	0xF03CCFEE  	MOVFF       POSTINC0, FARG_LCD_Write_Data_Data
0x018C	0xDF59      	RCALL       _LCD_Write_Data
;displayLCD.c,138 :: 		++pStr;
0x018E	0x4A39      	INFSNZ      FARG_DisplayLCD_Print_CP_pStr, 1 
0x0190	0x2A3A      	INCF        FARG_DisplayLCD_Print_CP_pStr+1, 1 
;displayLCD.c,139 :: 		}
0x0192	0xD7EE      	BRA         L_DisplayLCD_Print_CP11
L_DisplayLCD_Print_CP12:
;displayLCD.c,140 :: 		}
L_end_DisplayLCD_Print_CP:
0x0194	0x0012      	RETURN      0
; end of _DisplayLCD_Print_CP
_DisplayLCD_Char:
;displayLCD.c,143 :: 		void DisplayLCD_Char( unsigned char linha, unsigned char coluna, unsigned char Tchar )
;displayLCD.c,145 :: 		LCD_RS_IO = 0;   //Primeiramente é necessário escrever o comando (RS = 0) que permite posicionar o cursor na coordenada (X, Y) desejada
0x0196	0x9484      	BCF         PORTE, 2 
;displayLCD.c,146 :: 		switch(linha)
0x0198	0xD014      	BRA         L_DisplayLCD_Char13
;displayLCD.c,148 :: 		case 1:{
L_DisplayLCD_Char15:
;displayLCD.c,149 :: 		coluna = coluna + 0x7F;         //O endereço referente a posição (linha, coluna) = (1, 1) é 0x80
0x019A	0x0E7F      	MOVLW       127
0x019C	0x2436      	ADDWF       FARG_DisplayLCD_Char_coluna, 0 
0x019E	0x6E00      	MOVWF       R0 
0x01A0	0xF036C000  	MOVFF       R0, FARG_DisplayLCD_Char_coluna
;displayLCD.c,150 :: 		LCD_Write_Data(0, coluna);      //Chamada da função LCD_Write_Data para escrever o comando que posiciona o cursor na posição "coluna"
0x01A4	0x6A3B      	CLRF        FARG_LCD_Write_Data_RS 
0x01A6	0xF03CC000  	MOVFF       R0, FARG_LCD_Write_Data_Data
0x01AA	0xDF4A      	RCALL       _LCD_Write_Data
;displayLCD.c,151 :: 		break;
0x01AC	0xD010      	BRA         L_DisplayLCD_Char14
;displayLCD.c,153 :: 		case 2:{
L_DisplayLCD_Char16:
;displayLCD.c,154 :: 		coluna = coluna + 0xBF;        //O endereço referente a posição (linha, coluna) = (2, 1) é 0xC0
0x01AE	0x0EBF      	MOVLW       191
0x01B0	0x2436      	ADDWF       FARG_DisplayLCD_Char_coluna, 0 
0x01B2	0x6E00      	MOVWF       R0 
0x01B4	0xF036C000  	MOVFF       R0, FARG_DisplayLCD_Char_coluna
;displayLCD.c,155 :: 		LCD_Write_Data(0, coluna);     //Chamada da função LCD_Write_Data para escrever o comando que posiciona o cursor na posição "coluna"
0x01B8	0x6A3B      	CLRF        FARG_LCD_Write_Data_RS 
0x01BA	0xF03CC000  	MOVFF       R0, FARG_LCD_Write_Data_Data
0x01BE	0xDF40      	RCALL       _LCD_Write_Data
;displayLCD.c,156 :: 		break;
0x01C0	0xD006      	BRA         L_DisplayLCD_Char14
;displayLCD.c,158 :: 		}
L_DisplayLCD_Char13:
0x01C2	0x5035      	MOVF        FARG_DisplayLCD_Char_linha, 0 
0x01C4	0x0A01      	XORLW       1
0x01C6	0xE0E9      	BZ          L_DisplayLCD_Char15
0x01C8	0x5035      	MOVF        FARG_DisplayLCD_Char_linha, 0 
0x01CA	0x0A02      	XORLW       2
0x01CC	0xE0F0      	BZ          L_DisplayLCD_Char16
L_DisplayLCD_Char14:
;displayLCD.c,159 :: 		DisplayLCD_Char_CP(Tchar);              //Escreve no LCD
0x01CE	0xF039C037  	MOVFF       FARG_DisplayLCD_Char_Tchar, FARG_DisplayLCD_Char_CP_Tchar
0x01D2	0xDFC3      	RCALL       _DisplayLCD_Char_CP
;displayLCD.c,160 :: 		}
L_end_DisplayLCD_Char:
0x01D4	0x0012      	RETURN      0
; end of _DisplayLCD_Char
_ConfigMCU:
;main.c,11 :: 		void ConfigMCU()
;main.c,16 :: 		ADCON1 |= 0x0F;    /* Configura o PortB como I/O digital (por exemplo, no PIC18F4520) */
0x01D6	0x0E0F      	MOVLW       15
0x01D8	0x12C1      	IORWF       ADCON1, 1 
;main.c,18 :: 		}
L_end_ConfigMCU:
0x01DA	0x0012      	RETURN      0
; end of _ConfigMCU
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x01DC	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x01DE	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x01E2	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x01E4	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x01E6	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x01E8	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x01EA	0x0012      	RETURN      0
; end of ___CC2DW
_DisplayLCD_Print:
;displayLCD.c,113 :: 		void DisplayLCD_Print(unsigned char linha, unsigned char coluna, unsigned char * pStr)
;displayLCD.c,115 :: 		LCD_RS_IO = 0;   //Primeiramente é necessário escrever o comando (RS = 0) que permite posicionar o cursor na coordenada (X, Y) desejada
0x01EC	0x9484      	BCF         PORTE, 2 
;displayLCD.c,116 :: 		switch(linha)
0x01EE	0xD014      	BRA         L_DisplayLCD_Print7
;displayLCD.c,118 :: 		case 1:{
L_DisplayLCD_Print9:
;displayLCD.c,119 :: 		coluna = coluna + 0x7F;         //O endereço referente a posição (linha, coluna) = (1, 1) é 0x80
0x01F0	0x0E7F      	MOVLW       127
0x01F2	0x2436      	ADDWF       FARG_DisplayLCD_Print_coluna, 0 
0x01F4	0x6E00      	MOVWF       R0 
0x01F6	0xF036C000  	MOVFF       R0, FARG_DisplayLCD_Print_coluna
;displayLCD.c,120 :: 		LCD_Write_Data(0, coluna);      //Chamada da função LCD_Write_Data para escrever o comando que posiciona o cursor na posição "coluna"
0x01FA	0x6A3B      	CLRF        FARG_LCD_Write_Data_RS 
0x01FC	0xF03CC000  	MOVFF       R0, FARG_LCD_Write_Data_Data
0x0200	0xDF1F      	RCALL       _LCD_Write_Data
;displayLCD.c,121 :: 		break;
0x0202	0xD010      	BRA         L_DisplayLCD_Print8
;displayLCD.c,123 :: 		case 2:{
L_DisplayLCD_Print10:
;displayLCD.c,124 :: 		coluna = coluna + 0xBF;        //O endereço referente a posição (linha, coluna) = (2, 1) é 0xC0
0x0204	0x0EBF      	MOVLW       191
0x0206	0x2436      	ADDWF       FARG_DisplayLCD_Print_coluna, 0 
0x0208	0x6E00      	MOVWF       R0 
0x020A	0xF036C000  	MOVFF       R0, FARG_DisplayLCD_Print_coluna
;displayLCD.c,125 :: 		LCD_Write_Data(0, coluna);     //Chamada da função LCD_Write_Data para escrever o comando que posiciona o cursor na posição "coluna"
0x020E	0x6A3B      	CLRF        FARG_LCD_Write_Data_RS 
0x0210	0xF03CC000  	MOVFF       R0, FARG_LCD_Write_Data_Data
0x0214	0xDF15      	RCALL       _LCD_Write_Data
;displayLCD.c,126 :: 		break;
0x0216	0xD006      	BRA         L_DisplayLCD_Print8
;displayLCD.c,128 :: 		}
L_DisplayLCD_Print7:
0x0218	0x5035      	MOVF        FARG_DisplayLCD_Print_linha, 0 
0x021A	0x0A01      	XORLW       1
0x021C	0xE0E9      	BZ          L_DisplayLCD_Print9
0x021E	0x5035      	MOVF        FARG_DisplayLCD_Print_linha, 0 
0x0220	0x0A02      	XORLW       2
0x0222	0xE0F0      	BZ          L_DisplayLCD_Print10
L_DisplayLCD_Print8:
;displayLCD.c,129 :: 		DisplayLCD_Print_CP(pStr);              //Escreve no LCD
0x0224	0xF039C037  	MOVFF       FARG_DisplayLCD_Print_pStr, FARG_DisplayLCD_Print_CP_pStr
0x0228	0xF03AC038  	MOVFF       FARG_DisplayLCD_Print_pStr+1, FARG_DisplayLCD_Print_CP_pStr+1
0x022C	0xDFA1      	RCALL       _DisplayLCD_Print_CP
;displayLCD.c,130 :: 		}
L_end_DisplayLCD_Print:
0x022E	0x0012      	RETURN      0
; end of _DisplayLCD_Print
_DisplayLCD_Init:
;displayLCD.c,6 :: 		void DisplayLCD_Init( void )
;displayLCD.c,31 :: 		LCD_DATA4_TRIS = 0;
0x0230	0x9895      	BCF         TRISD, 4 
;displayLCD.c,32 :: 		LCD_DATA4_IO   = 0;
0x0232	0x9883      	BCF         PORTD, 4 
;displayLCD.c,33 :: 		LCD_DATA5_TRIS = 0;
0x0234	0x9A95      	BCF         TRISD, 5 
;displayLCD.c,34 :: 		LCD_DATA5_IO   = 0;
0x0236	0x9A83      	BCF         PORTD, 5 
;displayLCD.c,35 :: 		LCD_DATA6_TRIS = 0;
0x0238	0x9C95      	BCF         TRISD, 6 
;displayLCD.c,36 :: 		LCD_DATA6_IO   = 0;
0x023A	0x9C83      	BCF         PORTD, 6 
;displayLCD.c,37 :: 		LCD_DATA7_TRIS = 0;
0x023C	0x9E95      	BCF         TRISD, 7 
;displayLCD.c,38 :: 		LCD_DATA7_IO   = 0;
0x023E	0x9E83      	BCF         PORTD, 7 
;displayLCD.c,39 :: 		LCD_EN_TRIS    = 0;
0x0240	0x9296      	BCF         TRISE, 1 
;displayLCD.c,40 :: 		LCD_EN_IO      = 0;
0x0242	0x9284      	BCF         PORTE, 1 
;displayLCD.c,41 :: 		LCD_RS_TRIS    = 0;
0x0244	0x9496      	BCF         TRISE, 2 
;displayLCD.c,42 :: 		LCD_RS_IO      = 0;
0x0246	0x9484      	BCF         PORTE, 2 
;displayLCD.c,44 :: 		Delay_ms(100);   //Tempo necessário para inicialização do LCD após power-on
0x0248	0x0E02      	MOVLW       2
0x024A	0x6E0B      	MOVWF       R11, 0
0x024C	0x0E04      	MOVLW       4
0x024E	0x6E0C      	MOVWF       R12, 0
0x0250	0x0EBA      	MOVLW       186
0x0252	0x6E0D      	MOVWF       R13, 0
L_DisplayLCD_Init0:
0x0254	0x2E0D      	DECFSZ      R13, 1, 0
0x0256	0xD7FE      	BRA         L_DisplayLCD_Init0
0x0258	0x2E0C      	DECFSZ      R12, 1, 0
0x025A	0xD7FC      	BRA         L_DisplayLCD_Init0
0x025C	0x2E0B      	DECFSZ      R11, 1, 0
0x025E	0xD7FA      	BRA         L_DisplayLCD_Init0
0x0260	0x0000      	NOP
;displayLCD.c,46 :: 		LCD_DATA4_IO = 1;
0x0262	0x8883      	BSF         PORTD, 4 
;displayLCD.c,47 :: 		LCD_DATA5_IO = 1;
0x0264	0x8A83      	BSF         PORTD, 5 
;displayLCD.c,48 :: 		LCD_Enable();   /* 1º Clock */
0x0266	0xDEDA      	RCALL       _LCD_Enable
;displayLCD.c,49 :: 		LCD_Enable();   /* 2º Clock */
0x0268	0xDED9      	RCALL       _LCD_Enable
;displayLCD.c,50 :: 		LCD_Enable();   /* 3º Clock */
0x026A	0xDED8      	RCALL       _LCD_Enable
;displayLCD.c,51 :: 		Delay_ms(10);
0x026C	0x0E1A      	MOVLW       26
0x026E	0x6E0C      	MOVWF       R12, 0
0x0270	0x0EF8      	MOVLW       248
0x0272	0x6E0D      	MOVWF       R13, 0
L_DisplayLCD_Init1:
0x0274	0x2E0D      	DECFSZ      R13, 1, 0
0x0276	0xD7FE      	BRA         L_DisplayLCD_Init1
0x0278	0x2E0C      	DECFSZ      R12, 1, 0
0x027A	0xD7FC      	BRA         L_DisplayLCD_Init1
0x027C	0x0000      	NOP
;displayLCD.c,53 :: 		LCD_DATA4_IO = 0;
0x027E	0x9883      	BCF         PORTD, 4 
;displayLCD.c,54 :: 		LCD_DATA5_IO = 1;
0x0280	0x8A83      	BSF         PORTD, 5 
;displayLCD.c,55 :: 		LCD_Enable();   /* 1º Clock */
0x0282	0xDECC      	RCALL       _LCD_Enable
;displayLCD.c,56 :: 		LCD_Enable();   /* 2º Clock */
0x0284	0xDECB      	RCALL       _LCD_Enable
;displayLCD.c,57 :: 		Delay_ms(10);
0x0286	0x0E1A      	MOVLW       26
0x0288	0x6E0C      	MOVWF       R12, 0
0x028A	0x0EF8      	MOVLW       248
0x028C	0x6E0D      	MOVWF       R13, 0
L_DisplayLCD_Init2:
0x028E	0x2E0D      	DECFSZ      R13, 1, 0
0x0290	0xD7FE      	BRA         L_DisplayLCD_Init2
0x0292	0x2E0C      	DECFSZ      R12, 1, 0
0x0294	0xD7FC      	BRA         L_DisplayLCD_Init2
0x0296	0x0000      	NOP
;displayLCD.c,59 :: 		DisplayLCD_Cmd(0x28);  // 2 linhas 7x5 em modo 4-Bits
0x0298	0x0E28      	MOVLW       40
0x029A	0x6E39      	MOVWF       FARG_DisplayLCD_Cmd_Cmd 
0x029C	0xDF64      	RCALL       _DisplayLCD_Cmd
;displayLCD.c,60 :: 		DisplayLCD_Cmd(0x0C);  // Display aceso sem cursor
0x029E	0x0E0C      	MOVLW       12
0x02A0	0x6E39      	MOVWF       FARG_DisplayLCD_Cmd_Cmd 
0x02A2	0xDF61      	RCALL       _DisplayLCD_Cmd
;displayLCD.c,61 :: 		DisplayLCD_Cmd(0x06);  // Escreve deslocando o cursor para a direita
0x02A4	0x0E06      	MOVLW       6
0x02A6	0x6E39      	MOVWF       FARG_DisplayLCD_Cmd_Cmd 
0x02A8	0xDF5E      	RCALL       _DisplayLCD_Cmd
;displayLCD.c,62 :: 		DisplayLCD_Cmd(0x01);  // Limpa display e retorna o cursor para o inicio
0x02AA	0x0E01      	MOVLW       1
0x02AC	0x6E39      	MOVWF       FARG_DisplayLCD_Cmd_Cmd 
0x02AE	0xDF5B      	RCALL       _DisplayLCD_Cmd
;displayLCD.c,64 :: 		}
L_end_DisplayLCD_Init:
0x02B0	0x0012      	RETURN      0
; end of _DisplayLCD_Init
_main:
0x02B2	0xF001EC8E  	CALL        796, 0
;main.c,21 :: 		void main() {
;main.c,23 :: 		ConfigMCU();
0x02B6	0xDF8F      	RCALL       _ConfigMCU
;main.c,25 :: 		DisplayLCD_Init();
0x02B8	0xDFBB      	RCALL       _DisplayLCD_Init
;main.c,26 :: 		DisplayLCD_Cmd(LCD_Clear);
0x02BA	0x0E01      	MOVLW       1
0x02BC	0x6E39      	MOVWF       FARG_DisplayLCD_Cmd_Cmd 
0x02BE	0xDF53      	RCALL       _DisplayLCD_Cmd
;main.c,27 :: 		DisplayLCD_Print(1, 1, "   LCD Display   ");
0x02C0	0x0E01      	MOVLW       1
0x02C2	0x6E35      	MOVWF       FARG_DisplayLCD_Print_linha 
0x02C4	0x0E01      	MOVLW       1
0x02C6	0x6E36      	MOVWF       FARG_DisplayLCD_Print_coluna 
0x02C8	0x0E23      	MOVLW       ?lstr1_main
0x02CA	0x6E37      	MOVWF       FARG_DisplayLCD_Print_pStr 
0x02CC	0x0E00      	MOVLW       hi_addr(?lstr1_main)
0x02CE	0x6E38      	MOVWF       FARG_DisplayLCD_Print_pStr+1 
0x02D0	0xDF8D      	RCALL       _DisplayLCD_Print
;main.c,28 :: 		DisplayLCD_Print(2, 1, "   4-bit mode");
0x02D2	0x0E02      	MOVLW       2
0x02D4	0x6E35      	MOVWF       FARG_DisplayLCD_Print_linha 
0x02D6	0x0E01      	MOVLW       1
0x02D8	0x6E36      	MOVWF       FARG_DisplayLCD_Print_coluna 
0x02DA	0x0E15      	MOVLW       ?lstr2_main
0x02DC	0x6E37      	MOVWF       FARG_DisplayLCD_Print_pStr 
0x02DE	0x0E00      	MOVLW       hi_addr(?lstr2_main)
0x02E0	0x6E38      	MOVWF       FARG_DisplayLCD_Print_pStr+1 
0x02E2	0xDF84      	RCALL       _DisplayLCD_Print
;main.c,29 :: 		DisplayLCD_Char(2, 14, 'A');
0x02E4	0x0E02      	MOVLW       2
0x02E6	0x6E35      	MOVWF       FARG_DisplayLCD_Char_linha 
0x02E8	0x0E0E      	MOVLW       14
0x02EA	0x6E36      	MOVWF       FARG_DisplayLCD_Char_coluna 
0x02EC	0x0E41      	MOVLW       65
0x02EE	0x6E37      	MOVWF       FARG_DisplayLCD_Char_Tchar 
0x02F0	0xDF52      	RCALL       _DisplayLCD_Char
;main.c,30 :: 		DisplayLCD_Char_CP('%');
0x02F2	0x0E25      	MOVLW       37
0x02F4	0x6E39      	MOVWF       FARG_DisplayLCD_Char_CP_Tchar 
0x02F6	0xDF31      	RCALL       _DisplayLCD_Char_CP
;main.c,32 :: 		while(1){
L_main0:
;main.c,34 :: 		}
0x02F8	0xD7FF      	BRA         L_main0
;main.c,35 :: 		}
L_end_main:
0x02FA	0xD7FF      	BRA         $+0
; end of _main
0x031C	0xF015EE10  	LFSR        1, 21
0x0320	0x0E20      	MOVLW       32
0x0322	0x6E00      	MOVWF       R0 
0x0324	0x0E01      	MOVLW       1
0x0326	0x6E01      	MOVWF       R1 
0x0328	0x0EFC      	MOVLW       252
0x032A	0x6EF6      	MOVWF       4086 
0x032C	0x0E02      	MOVLW       2
0x032E	0x6EF7      	MOVWF       TBLPTRH 
0x0330	0x0E00      	MOVLW       0
0x0332	0x6EF8      	MOVWF       TBLPTRU 
0x0334	0xF000ECEE  	CALL        476, 0
0x0338	0x0012      	RETURN      0
;main.c,0 :: ?ICS?lstr2_main
0x02FC	0x2020 ;?ICS?lstr2_main+0
0x02FE	0x3420 ;?ICS?lstr2_main+2
0x0300	0x622D ;?ICS?lstr2_main+4
0x0302	0x7469 ;?ICS?lstr2_main+6
0x0304	0x6D20 ;?ICS?lstr2_main+8
0x0306	0x646F ;?ICS?lstr2_main+10
0x0308	0x0065 ;?ICS?lstr2_main+12
; end of ?ICS?lstr2_main
;main.c,0 :: ?ICS?lstr1_main
0x030A	0x2020 ;?ICS?lstr1_main+0
0x030C	0x4C20 ;?ICS?lstr1_main+2
0x030E	0x4443 ;?ICS?lstr1_main+4
0x0310	0x4420 ;?ICS?lstr1_main+6
0x0312	0x7369 ;?ICS?lstr1_main+8
0x0314	0x6C70 ;?ICS?lstr1_main+10
0x0316	0x7961 ;?ICS?lstr1_main+12
0x0318	0x2020 ;?ICS?lstr1_main+14
0x031A	0x0020 ;?ICS?lstr1_main+16
; end of ?ICS?lstr1_main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [36]    _LCD_Enable
0x0040     [282]    _LCD_Write_Data
0x015A      [12]    _DisplayLCD_Char_CP
0x0166      [10]    _DisplayLCD_Cmd
0x0170      [38]    _DisplayLCD_Print_CP
0x0196      [64]    _DisplayLCD_Char
0x01D6       [6]    _ConfigMCU
0x01DC      [16]    ___CC2DW
0x01EC      [68]    _DisplayLCD_Print
0x0230     [130]    _DisplayLCD_Init
0x02B2      [74]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015      [14]    ?lstr2_main
0x0023      [18]    ?lstr1_main
0x0035       [1]    FARG_DisplayLCD_Print_linha
0x0035       [1]    FARG_DisplayLCD_Char_linha
0x0036       [1]    FARG_DisplayLCD_Char_coluna
0x0036       [1]    FARG_DisplayLCD_Print_coluna
0x0037       [2]    FARG_DisplayLCD_Print_pStr
0x0037       [1]    FARG_DisplayLCD_Char_Tchar
0x0039       [2]    FARG_DisplayLCD_Print_CP_pStr
0x0039       [1]    FARG_DisplayLCD_Char_CP_Tchar
0x0039       [1]    FARG_DisplayLCD_Cmd_Cmd
0x003B       [1]    FARG_LCD_Write_Data_RS
0x003C       [1]    FARG_LCD_Write_Data_Data
0x0F83       [1]    PORTD
0x0F84       [1]    PORTE
0x0F95       [1]    TRISD
0x0F96       [1]    TRISE
0x0FC1       [1]    ADCON1
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x02FC      [14]    ?ICS?lstr2_main
0x030A      [18]    ?ICS?lstr1_main
