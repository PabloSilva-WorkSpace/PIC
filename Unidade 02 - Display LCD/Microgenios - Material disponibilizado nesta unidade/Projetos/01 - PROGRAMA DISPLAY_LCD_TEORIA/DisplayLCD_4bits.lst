;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 10/02/2014 14:30:53
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF001EF5C  	GOTO        696
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_LCD_Enable:
;DisplayLCD_4bits.c,93 :: 		void LCD_Enable(void)  //INSTRUÇÃO DE CLOCK PARA O LCD
;DisplayLCD_4bits.c,95 :: 		Delay_us(40);
0x001C	0x0E1A      	MOVLW       26
0x001E	0x6E0D      	MOVWF       R13, 0
L_LCD_Enable1:
0x0020	0x2E0D      	DECFSZ      R13, 1, 0
0x0022	0xD7FE      	BRA         L_LCD_Enable1
0x0024	0x0000      	NOP
;DisplayLCD_4bits.c,96 :: 		LCD_EN_IO = 1;
0x0026	0x8A81      	BSF         PORTB, 5 
;DisplayLCD_4bits.c,97 :: 		Delay_us(40);
0x0028	0x0E1A      	MOVLW       26
0x002A	0x6E0D      	MOVWF       R13, 0
L_LCD_Enable2:
0x002C	0x2E0D      	DECFSZ      R13, 1, 0
0x002E	0xD7FE      	BRA         L_LCD_Enable2
0x0030	0x0000      	NOP
;DisplayLCD_4bits.c,98 :: 		LCD_EN_IO = 0;
0x0032	0x9A81      	BCF         PORTB, 5 
;DisplayLCD_4bits.c,99 :: 		Delay_us(40);
0x0034	0x0E1A      	MOVLW       26
0x0036	0x6E0D      	MOVWF       R13, 0
L_LCD_Enable3:
0x0038	0x2E0D      	DECFSZ      R13, 1, 0
0x003A	0xD7FE      	BRA         L_LCD_Enable3
0x003C	0x0000      	NOP
;DisplayLCD_4bits.c,100 :: 		}
L_end_LCD_Enable:
0x003E	0x0012      	RETURN      0
; end of _LCD_Enable
_LCD_Write_Data:
;DisplayLCD_4bits.c,55 :: 		void LCD_Write_Data(unsigned char RS, unsigned char Data)
;DisplayLCD_4bits.c,69 :: 		LCD_RS_IO  = RS;     //0
0x0040	0xB038      	BTFSC       FARG_LCD_Write_Data_RS, 0 
0x0042	0xD002      	BRA         L__LCD_Write_Data20
0x0044	0x9881      	BCF         PORTB, 4 
0x0046	0xD001      	BRA         L__LCD_Write_Data21
L__LCD_Write_Data20:
0x0048	0x8881      	BSF         PORTB, 4 
L__LCD_Write_Data21:
;DisplayLCD_4bits.c,71 :: 		Delay_ms(2);
0x004A	0x0E06      	MOVLW       6
0x004C	0x6E0C      	MOVWF       R12, 0
0x004E	0x0E30      	MOVLW       48
0x0050	0x6E0D      	MOVWF       R13, 0
L_LCD_Write_Data0:
0x0052	0x2E0D      	DECFSZ      R13, 1, 0
0x0054	0xD7FE      	BRA         L_LCD_Write_Data0
0x0056	0x2E0C      	DECFSZ      R12, 1, 0
0x0058	0xD7FC      	BRA         L_LCD_Write_Data0
0x005A	0x0000      	NOP
;DisplayLCD_4bits.c,72 :: 		LCD_DATA4_IO = ((Data & 0x10) == 0x10);
0x005C	0x0E10      	MOVLW       16
0x005E	0x1439      	ANDWF       FARG_LCD_Write_Data_Data, 0 
0x0060	0x6E01      	MOVWF       R1 
0x0062	0x5001      	MOVF        R1, 0 
0x0064	0x0A10      	XORLW       16
0x0066	0x0E01      	MOVLW       1
0x0068	0xA4D8      	BTFSS       STATUS, 2 
0x006A	0x0E00      	MOVLW       0
0x006C	0x6E00      	MOVWF       R0 
0x006E	0xB000      	BTFSC       R0, 0 
0x0070	0xD002      	BRA         L__LCD_Write_Data22
0x0072	0x9081      	BCF         PORTB, 0 
0x0074	0xD001      	BRA         L__LCD_Write_Data23
L__LCD_Write_Data22:
0x0076	0x8081      	BSF         PORTB, 0 
L__LCD_Write_Data23:
;DisplayLCD_4bits.c,73 :: 		LCD_DATA5_IO = ((Data & 0x20) == 0x20);
0x0078	0x0E20      	MOVLW       32
0x007A	0x1439      	ANDWF       FARG_LCD_Write_Data_Data, 0 
0x007C	0x6E01      	MOVWF       R1 
0x007E	0x5001      	MOVF        R1, 0 
0x0080	0x0A20      	XORLW       32
0x0082	0x0E01      	MOVLW       1
0x0084	0xA4D8      	BTFSS       STATUS, 2 
0x0086	0x0E00      	MOVLW       0
0x0088	0x6E00      	MOVWF       R0 
0x008A	0xB000      	BTFSC       R0, 0 
0x008C	0xD002      	BRA         L__LCD_Write_Data24
0x008E	0x9281      	BCF         PORTB, 1 
0x0090	0xD001      	BRA         L__LCD_Write_Data25
L__LCD_Write_Data24:
0x0092	0x8281      	BSF         PORTB, 1 
L__LCD_Write_Data25:
;DisplayLCD_4bits.c,74 :: 		LCD_DATA6_IO = ((Data & 0x40) == 0x40);
0x0094	0x0E40      	MOVLW       64
0x0096	0x1439      	ANDWF       FARG_LCD_Write_Data_Data, 0 
0x0098	0x6E01      	MOVWF       R1 
0x009A	0x5001      	MOVF        R1, 0 
0x009C	0x0A40      	XORLW       64
0x009E	0x0E01      	MOVLW       1
0x00A0	0xA4D8      	BTFSS       STATUS, 2 
0x00A2	0x0E00      	MOVLW       0
0x00A4	0x6E00      	MOVWF       R0 
0x00A6	0xB000      	BTFSC       R0, 0 
0x00A8	0xD002      	BRA         L__LCD_Write_Data26
0x00AA	0x9481      	BCF         PORTB, 2 
0x00AC	0xD001      	BRA         L__LCD_Write_Data27
L__LCD_Write_Data26:
0x00AE	0x8481      	BSF         PORTB, 2 
L__LCD_Write_Data27:
;DisplayLCD_4bits.c,75 :: 		LCD_DATA7_IO = ((Data & 0x80) == 0x80);
0x00B0	0x0E80      	MOVLW       128
0x00B2	0x1439      	ANDWF       FARG_LCD_Write_Data_Data, 0 
0x00B4	0x6E01      	MOVWF       R1 
0x00B6	0x5001      	MOVF        R1, 0 
0x00B8	0x0A80      	XORLW       128
0x00BA	0x0E01      	MOVLW       1
0x00BC	0xA4D8      	BTFSS       STATUS, 2 
0x00BE	0x0E00      	MOVLW       0
0x00C0	0x6E00      	MOVWF       R0 
0x00C2	0xB000      	BTFSC       R0, 0 
0x00C4	0xD002      	BRA         L__LCD_Write_Data28
0x00C6	0x9681      	BCF         PORTB, 3 
0x00C8	0xD001      	BRA         L__LCD_Write_Data29
L__LCD_Write_Data28:
0x00CA	0x8681      	BSF         PORTB, 3 
L__LCD_Write_Data29:
;DisplayLCD_4bits.c,77 :: 		LCD_Enable(void);
0x00CC	0xDFA7      	RCALL       _LCD_Enable
;DisplayLCD_4bits.c,79 :: 		Data = Data << 4; //Rotaciona o nibble o LSB para a posição MSB
0x00CE	0xF002C039  	MOVFF       FARG_LCD_Write_Data_Data, R2
0x00D2	0x3602      	RLCF        R2, 1 
0x00D4	0x9002      	BCF         R2, 0 
0x00D6	0x3602      	RLCF        R2, 1 
0x00D8	0x9002      	BCF         R2, 0 
0x00DA	0x3602      	RLCF        R2, 1 
0x00DC	0x9002      	BCF         R2, 0 
0x00DE	0x3602      	RLCF        R2, 1 
0x00E0	0x9002      	BCF         R2, 0 
0x00E2	0xF039C002  	MOVFF       R2, FARG_LCD_Write_Data_Data
;DisplayLCD_4bits.c,80 :: 		LCD_DATA4_IO = ((Data & 0x10) == 0x10);
0x00E6	0x0E10      	MOVLW       16
0x00E8	0x1402      	ANDWF       R2, 0 
0x00EA	0x6E01      	MOVWF       R1 
0x00EC	0x5001      	MOVF        R1, 0 
0x00EE	0x0A10      	XORLW       16
0x00F0	0x0E01      	MOVLW       1
0x00F2	0xA4D8      	BTFSS       STATUS, 2 
0x00F4	0x0E00      	MOVLW       0
0x00F6	0x6E00      	MOVWF       R0 
0x00F8	0xB000      	BTFSC       R0, 0 
0x00FA	0xD002      	BRA         L__LCD_Write_Data30
0x00FC	0x9081      	BCF         PORTB, 0 
0x00FE	0xD001      	BRA         L__LCD_Write_Data31
L__LCD_Write_Data30:
0x0100	0x8081      	BSF         PORTB, 0 
L__LCD_Write_Data31:
;DisplayLCD_4bits.c,81 :: 		LCD_DATA5_IO = ((Data & 0x20) == 0x20);
0x0102	0x0E20      	MOVLW       32
0x0104	0x1402      	ANDWF       R2, 0 
0x0106	0x6E01      	MOVWF       R1 
0x0108	0x5001      	MOVF        R1, 0 
0x010A	0x0A20      	XORLW       32
0x010C	0x0E01      	MOVLW       1
0x010E	0xA4D8      	BTFSS       STATUS, 2 
0x0110	0x0E00      	MOVLW       0
0x0112	0x6E00      	MOVWF       R0 
0x0114	0xB000      	BTFSC       R0, 0 
0x0116	0xD002      	BRA         L__LCD_Write_Data32
0x0118	0x9281      	BCF         PORTB, 1 
0x011A	0xD001      	BRA         L__LCD_Write_Data33
L__LCD_Write_Data32:
0x011C	0x8281      	BSF         PORTB, 1 
L__LCD_Write_Data33:
;DisplayLCD_4bits.c,82 :: 		LCD_DATA6_IO = ((Data & 0x40) == 0x40);
0x011E	0x0E40      	MOVLW       64
0x0120	0x1402      	ANDWF       R2, 0 
0x0122	0x6E01      	MOVWF       R1 
0x0124	0x5001      	MOVF        R1, 0 
0x0126	0x0A40      	XORLW       64
0x0128	0x0E01      	MOVLW       1
0x012A	0xA4D8      	BTFSS       STATUS, 2 
0x012C	0x0E00      	MOVLW       0
0x012E	0x6E00      	MOVWF       R0 
0x0130	0xB000      	BTFSC       R0, 0 
0x0132	0xD002      	BRA         L__LCD_Write_Data34
0x0134	0x9481      	BCF         PORTB, 2 
0x0136	0xD001      	BRA         L__LCD_Write_Data35
L__LCD_Write_Data34:
0x0138	0x8481      	BSF         PORTB, 2 
L__LCD_Write_Data35:
;DisplayLCD_4bits.c,83 :: 		LCD_DATA7_IO = ((Data & 0x80) == 0x80);
0x013A	0x0E80      	MOVLW       128
0x013C	0x1402      	ANDWF       R2, 0 
0x013E	0x6E01      	MOVWF       R1 
0x0140	0x5001      	MOVF        R1, 0 
0x0142	0x0A80      	XORLW       128
0x0144	0x0E01      	MOVLW       1
0x0146	0xA4D8      	BTFSS       STATUS, 2 
0x0148	0x0E00      	MOVLW       0
0x014A	0x6E00      	MOVWF       R0 
0x014C	0xB000      	BTFSC       R0, 0 
0x014E	0xD002      	BRA         L__LCD_Write_Data36
0x0150	0x9681      	BCF         PORTB, 3 
0x0152	0xD001      	BRA         L__LCD_Write_Data37
L__LCD_Write_Data36:
0x0154	0x8681      	BSF         PORTB, 3 
L__LCD_Write_Data37:
;DisplayLCD_4bits.c,85 :: 		LCD_Enable(void);
0x0156	0xDF62      	RCALL       _LCD_Enable
;DisplayLCD_4bits.c,91 :: 		}
L_end_LCD_Write_Data:
0x0158	0x0012      	RETURN      0
; end of _LCD_Write_Data
_DisplayLCD_Chr_Cp:
;DisplayLCD_4bits.c,107 :: 		void DisplayLCD_Chr_Cp(unsigned char Tchar)
;DisplayLCD_4bits.c,109 :: 		LCD_Write_Data(1, Tchar);    //RS = 1 -> DADO A SER ESCRITO
0x015A	0x0E01      	MOVLW       1
0x015C	0x6E38      	MOVWF       FARG_LCD_Write_Data_RS 
0x015E	0xF039C036  	MOVFF       FARG_DisplayLCD_Chr_Cp_Tchar, FARG_LCD_Write_Data_Data
0x0162	0xDF6E      	RCALL       _LCD_Write_Data
;DisplayLCD_4bits.c,110 :: 		}
L_end_DisplayLCD_Chr_Cp:
0x0164	0x0012      	RETURN      0
; end of _DisplayLCD_Chr_Cp
_DisplayLCD_Cmd:
;DisplayLCD_4bits.c,102 :: 		void DisplayLCD_Cmd(unsigned char CmdLCD)
;DisplayLCD_4bits.c,104 :: 		LCD_Write_Data(0, CmdLCD);     //RS = 0, -> COMANDO A SER PROCESSADO
0x0166	0x6A38      	CLRF        FARG_LCD_Write_Data_RS 
0x0168	0xF039C036  	MOVFF       FARG_DisplayLCD_Cmd_CmdLCD, FARG_LCD_Write_Data_Data
0x016C	0xDF69      	RCALL       _LCD_Write_Data
;DisplayLCD_4bits.c,105 :: 		}
L_end_DisplayLCD_Cmd:
0x016E	0x0012      	RETURN      0
; end of _DisplayLCD_Cmd
_DisplayLCD_Out_Cp:
;DisplayLCD_4bits.c,199 :: 		void DisplayLCD_Out_Cp(unsigned char *Ponteiro)
;DisplayLCD_4bits.c,202 :: 		while(*Ponteiro) //loop até encontrar o caractere NULL (ZERO)
L_DisplayLCD_Out_Cp11:
0x0170	0xFFE9C036  	MOVFF       FARG_DisplayLCD_Out_Cp_Ponteiro, FSR0L
0x0174	0xFFEAC037  	MOVFF       FARG_DisplayLCD_Out_Cp_Ponteiro+1, FSR0H
0x0178	0x52EE      	MOVF        POSTINC0, 1 
0x017A	0xE00C      	BZ          L_DisplayLCD_Out_Cp12
;DisplayLCD_4bits.c,204 :: 		LCD_Write_Data(1,*Ponteiro);  //RS =1, ESCREVENDO NO LCD
0x017C	0x0E01      	MOVLW       1
0x017E	0x6E38      	MOVWF       FARG_LCD_Write_Data_RS 
0x0180	0xFFE9C036  	MOVFF       FARG_DisplayLCD_Out_Cp_Ponteiro, FSR0L
0x0184	0xFFEAC037  	MOVFF       FARG_DisplayLCD_Out_Cp_Ponteiro+1, FSR0H
0x0188	0xF039CFEE  	MOVFF       POSTINC0, FARG_LCD_Write_Data_Data
0x018C	0xDF59      	RCALL       _LCD_Write_Data
;DisplayLCD_4bits.c,206 :: 		++Ponteiro;
0x018E	0x4A36      	INFSNZ      FARG_DisplayLCD_Out_Cp_Ponteiro, 1 
0x0190	0x2A37      	INCF        FARG_DisplayLCD_Out_Cp_Ponteiro+1, 1 
;DisplayLCD_4bits.c,207 :: 		}
0x0192	0xD7EE      	BRA         L_DisplayLCD_Out_Cp11
L_DisplayLCD_Out_Cp12:
;DisplayLCD_4bits.c,209 :: 		}
L_end_DisplayLCD_Out_Cp:
0x0194	0x0012      	RETURN      0
; end of _DisplayLCD_Out_Cp
_DisplayLCD_Chr:
;DisplayLCD_4bits.c,214 :: 		unsigned char Tchar)
;DisplayLCD_4bits.c,216 :: 		LCD_RS_IO = 0; //TRATAR PRIMEIRO AS COORDENADAS X E Y
0x0196	0x9881      	BCF         PORTB, 4 
;DisplayLCD_4bits.c,217 :: 		switch(Linha)
0x0198	0xD014      	BRA         L_DisplayLCD_Chr13
;DisplayLCD_4bits.c,219 :: 		case 1: {
L_DisplayLCD_Chr15:
;DisplayLCD_4bits.c,220 :: 		Coluna =  Coluna + 0x7F;
0x019A	0x0E7F      	MOVLW       127
0x019C	0x2433      	ADDWF       FARG_DisplayLCD_Chr_Coluna, 0 
0x019E	0x6E00      	MOVWF       R0 
0x01A0	0xF033C000  	MOVFF       R0, FARG_DisplayLCD_Chr_Coluna
;DisplayLCD_4bits.c,221 :: 		LCD_Write_Data(0,Coluna);
0x01A4	0x6A38      	CLRF        FARG_LCD_Write_Data_RS 
0x01A6	0xF039C000  	MOVFF       R0, FARG_LCD_Write_Data_Data
0x01AA	0xDF4A      	RCALL       _LCD_Write_Data
;DisplayLCD_4bits.c,223 :: 		break;
0x01AC	0xD010      	BRA         L_DisplayLCD_Chr14
;DisplayLCD_4bits.c,225 :: 		case 2: {
L_DisplayLCD_Chr16:
;DisplayLCD_4bits.c,226 :: 		Coluna += 0xBF;
0x01AE	0x0EBF      	MOVLW       191
0x01B0	0x2433      	ADDWF       FARG_DisplayLCD_Chr_Coluna, 0 
0x01B2	0x6E00      	MOVWF       R0 
0x01B4	0xF033C000  	MOVFF       R0, FARG_DisplayLCD_Chr_Coluna
;DisplayLCD_4bits.c,227 :: 		LCD_Write_Data(0,Coluna);
0x01B8	0x6A38      	CLRF        FARG_LCD_Write_Data_RS 
0x01BA	0xF039C000  	MOVFF       R0, FARG_LCD_Write_Data_Data
0x01BE	0xDF40      	RCALL       _LCD_Write_Data
;DisplayLCD_4bits.c,229 :: 		break;
0x01C0	0xD006      	BRA         L_DisplayLCD_Chr14
;DisplayLCD_4bits.c,231 :: 		}
L_DisplayLCD_Chr13:
0x01C2	0x5032      	MOVF        FARG_DisplayLCD_Chr_Linha, 0 
0x01C4	0x0A01      	XORLW       1
0x01C6	0xE0E9      	BZ          L_DisplayLCD_Chr15
0x01C8	0x5032      	MOVF        FARG_DisplayLCD_Chr_Linha, 0 
0x01CA	0x0A02      	XORLW       2
0x01CC	0xE0F0      	BZ          L_DisplayLCD_Chr16
L_DisplayLCD_Chr14:
;DisplayLCD_4bits.c,232 :: 		DisplayLCD_Chr_Cp(Tchar); //ESCREVE NO LCD
0x01CE	0xF036C034  	MOVFF       FARG_DisplayLCD_Chr_Tchar, FARG_DisplayLCD_Chr_Cp_Tchar
0x01D2	0xDFC3      	RCALL       _DisplayLCD_Chr_Cp
;DisplayLCD_4bits.c,234 :: 		}
L_end_DisplayLCD_Chr:
0x01D4	0x0012      	RETURN      0
; end of _DisplayLCD_Chr
_ConfigMCU:
;DisplayLCD_4bits.c,236 :: 		void ConfigMCU()
;DisplayLCD_4bits.c,239 :: 		ANSELB = 0;     //Configura PORTB como I/O digital
0x01D6	0x010F      	MOVLB       15
0x01D8	0x6B39      	CLRF        ANSELB, 1
;DisplayLCD_4bits.c,243 :: 		}
L_end_ConfigMCU:
0x01DA	0x0012      	RETURN      0
; end of _ConfigMCU
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x01DC	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x01DE	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x01E2	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x01E4	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x01E6	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x01E8	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x01EA	0x0012      	RETURN      0
; end of ___CC2DW
_DisplayLCD_Out:
;DisplayLCD_4bits.c,172 :: 		unsigned char *TextoLCD)
;DisplayLCD_4bits.c,174 :: 		LCD_RS_IO = 0; //TRATAR PRIMEIRO AS COORDENADAS X E Y
0x01EC	0x9881      	BCF         PORTB, 4 
;DisplayLCD_4bits.c,175 :: 		switch(Linha)
0x01EE	0xD014      	BRA         L_DisplayLCD_Out7
;DisplayLCD_4bits.c,177 :: 		case 1: {
L_DisplayLCD_Out9:
;DisplayLCD_4bits.c,178 :: 		Coluna =  Coluna + 0X7F;  // 2 + 0X7F = 0X81
0x01F0	0x0E7F      	MOVLW       127
0x01F2	0x2433      	ADDWF       FARG_DisplayLCD_Out_Coluna, 0 
0x01F4	0x6E00      	MOVWF       R0 
0x01F6	0xF033C000  	MOVFF       R0, FARG_DisplayLCD_Out_Coluna
;DisplayLCD_4bits.c,179 :: 		LCD_Write_Data(0,Coluna); //Comando, visto que estamos posicionando o cursor
0x01FA	0x6A38      	CLRF        FARG_LCD_Write_Data_RS 
0x01FC	0xF039C000  	MOVFF       R0, FARG_LCD_Write_Data_Data
0x0200	0xDF1F      	RCALL       _LCD_Write_Data
;DisplayLCD_4bits.c,181 :: 		break;
0x0202	0xD010      	BRA         L_DisplayLCD_Out8
;DisplayLCD_4bits.c,183 :: 		case 2: {
L_DisplayLCD_Out10:
;DisplayLCD_4bits.c,184 :: 		Coluna = Coluna + 0xBF;  //2 + 0xBF = 0XC1
0x0204	0x0EBF      	MOVLW       191
0x0206	0x2433      	ADDWF       FARG_DisplayLCD_Out_Coluna, 0 
0x0208	0x6E00      	MOVWF       R0 
0x020A	0xF033C000  	MOVFF       R0, FARG_DisplayLCD_Out_Coluna
;DisplayLCD_4bits.c,185 :: 		LCD_Write_Data(0,Coluna);
0x020E	0x6A38      	CLRF        FARG_LCD_Write_Data_RS 
0x0210	0xF039C000  	MOVFF       R0, FARG_LCD_Write_Data_Data
0x0214	0xDF15      	RCALL       _LCD_Write_Data
;DisplayLCD_4bits.c,187 :: 		break;
0x0216	0xD006      	BRA         L_DisplayLCD_Out8
;DisplayLCD_4bits.c,189 :: 		}
L_DisplayLCD_Out7:
0x0218	0x5032      	MOVF        FARG_DisplayLCD_Out_Linha, 0 
0x021A	0x0A01      	XORLW       1
0x021C	0xE0E9      	BZ          L_DisplayLCD_Out9
0x021E	0x5032      	MOVF        FARG_DisplayLCD_Out_Linha, 0 
0x0220	0x0A02      	XORLW       2
0x0222	0xE0F0      	BZ          L_DisplayLCD_Out10
L_DisplayLCD_Out8:
;DisplayLCD_4bits.c,190 :: 		DisplayLCD_Out_Cp(TextoLCD); //Escreve no LCD "BOM DIA"
0x0224	0xF036C034  	MOVFF       FARG_DisplayLCD_Out_TextoLCD, FARG_DisplayLCD_Out_Cp_Ponteiro
0x0228	0xF037C035  	MOVFF       FARG_DisplayLCD_Out_TextoLCD+1, FARG_DisplayLCD_Out_Cp_Ponteiro+1
0x022C	0xDFA1      	RCALL       _DisplayLCD_Out_Cp
;DisplayLCD_4bits.c,191 :: 		}
L_end_DisplayLCD_Out:
0x022E	0x0012      	RETURN      0
; end of _DisplayLCD_Out
_DisplayLCD_Init:
;DisplayLCD_4bits.c,113 :: 		void DisplayLCD_Init(){ //modo 4bits ou 8bits
;DisplayLCD_4bits.c,136 :: 		LCD_DATA4_TRIS = 0; LCD_DATA4_IO = 0;
0x0230	0x9093      	BCF         TRISB, 0 
0x0232	0x9081      	BCF         PORTB, 0 
;DisplayLCD_4bits.c,137 :: 		LCD_DATA5_TRIS = 0; LCD_DATA5_IO = 0;
0x0234	0x9293      	BCF         TRISB, 1 
0x0236	0x9281      	BCF         PORTB, 1 
;DisplayLCD_4bits.c,138 :: 		LCD_DATA6_TRIS = 0; LCD_DATA6_IO = 0;
0x0238	0x9493      	BCF         TRISB, 2 
0x023A	0x9481      	BCF         PORTB, 2 
;DisplayLCD_4bits.c,139 :: 		LCD_DATA7_TRIS = 0; LCD_DATA7_IO = 0;
0x023C	0x9693      	BCF         TRISB, 3 
0x023E	0x9681      	BCF         PORTB, 3 
;DisplayLCD_4bits.c,140 :: 		LCD_EN_TRIS = 0; LCD_RS_IO = 0;
0x0240	0x9A93      	BCF         TRISB, 5 
0x0242	0x9881      	BCF         PORTB, 4 
;DisplayLCD_4bits.c,141 :: 		LCD_RS_TRIS = 0; LCD_RS_IO = 0;
0x0244	0x9893      	BCF         TRISB, 4 
0x0246	0x9881      	BCF         PORTB, 4 
;DisplayLCD_4bits.c,143 :: 		Delay_ms(100);  //Tempo necessário para inicialização do LCD após power-on
0x0248	0x0E02      	MOVLW       2
0x024A	0x6E0B      	MOVWF       R11, 0
0x024C	0x0E04      	MOVLW       4
0x024E	0x6E0C      	MOVWF       R12, 0
0x0250	0x0EBA      	MOVLW       186
0x0252	0x6E0D      	MOVWF       R13, 0
L_DisplayLCD_Init4:
0x0254	0x2E0D      	DECFSZ      R13, 1, 0
0x0256	0xD7FE      	BRA         L_DisplayLCD_Init4
0x0258	0x2E0C      	DECFSZ      R12, 1, 0
0x025A	0xD7FC      	BRA         L_DisplayLCD_Init4
0x025C	0x2E0B      	DECFSZ      R11, 1, 0
0x025E	0xD7FA      	BRA         L_DisplayLCD_Init4
0x0260	0x0000      	NOP
;DisplayLCD_4bits.c,145 :: 		LCD_DATA4_IO = 1;
0x0262	0x8081      	BSF         PORTB, 0 
;DisplayLCD_4bits.c,146 :: 		LCD_DATA5_IO = 1;
0x0264	0x8281      	BSF         PORTB, 1 
;DisplayLCD_4bits.c,147 :: 		LCD_Enable();
0x0266	0xDEDA      	RCALL       _LCD_Enable
;DisplayLCD_4bits.c,148 :: 		LCD_Enable();
0x0268	0xDED9      	RCALL       _LCD_Enable
;DisplayLCD_4bits.c,149 :: 		LCD_Enable();
0x026A	0xDED8      	RCALL       _LCD_Enable
;DisplayLCD_4bits.c,151 :: 		Delay_ms(1);
0x026C	0x0E03      	MOVLW       3
0x026E	0x6E0C      	MOVWF       R12, 0
0x0270	0x0E97      	MOVLW       151
0x0272	0x6E0D      	MOVWF       R13, 0
L_DisplayLCD_Init5:
0x0274	0x2E0D      	DECFSZ      R13, 1, 0
0x0276	0xD7FE      	BRA         L_DisplayLCD_Init5
0x0278	0x2E0C      	DECFSZ      R12, 1, 0
0x027A	0xD7FC      	BRA         L_DisplayLCD_Init5
0x027C	0x0000      	NOP
0x027E	0x0000      	NOP
;DisplayLCD_4bits.c,153 :: 		LCD_DATA4_IO = 0;
0x0280	0x9081      	BCF         PORTB, 0 
;DisplayLCD_4bits.c,154 :: 		LCD_DATA5_IO = 1;
0x0282	0x8281      	BSF         PORTB, 1 
;DisplayLCD_4bits.c,155 :: 		LCD_Enable();
0x0284	0xDECB      	RCALL       _LCD_Enable
;DisplayLCD_4bits.c,156 :: 		LCD_Enable();
0x0286	0xDECA      	RCALL       _LCD_Enable
;DisplayLCD_4bits.c,157 :: 		LCD_Enable();
0x0288	0xDEC9      	RCALL       _LCD_Enable
;DisplayLCD_4bits.c,159 :: 		Delay_ms(1);
0x028A	0x0E03      	MOVLW       3
0x028C	0x6E0C      	MOVWF       R12, 0
0x028E	0x0E97      	MOVLW       151
0x0290	0x6E0D      	MOVWF       R13, 0
L_DisplayLCD_Init6:
0x0292	0x2E0D      	DECFSZ      R13, 1, 0
0x0294	0xD7FE      	BRA         L_DisplayLCD_Init6
0x0296	0x2E0C      	DECFSZ      R12, 1, 0
0x0298	0xD7FC      	BRA         L_DisplayLCD_Init6
0x029A	0x0000      	NOP
0x029C	0x0000      	NOP
;DisplayLCD_4bits.c,162 :: 		DisplayLCD_Cmd(0X28); //2X linhas 7x5 em modo 4bits
0x029E	0x0E28      	MOVLW       40
0x02A0	0x6E36      	MOVWF       FARG_DisplayLCD_Cmd_CmdLCD 
0x02A2	0xDF61      	RCALL       _DisplayLCD_Cmd
;DisplayLCD_4bits.c,163 :: 		DisplayLCD_Cmd(0X0C);
0x02A4	0x0E0C      	MOVLW       12
0x02A6	0x6E36      	MOVWF       FARG_DisplayLCD_Cmd_CmdLCD 
0x02A8	0xDF5E      	RCALL       _DisplayLCD_Cmd
;DisplayLCD_4bits.c,164 :: 		DisplayLCD_Cmd(0X06);
0x02AA	0x0E06      	MOVLW       6
0x02AC	0x6E36      	MOVWF       FARG_DisplayLCD_Cmd_CmdLCD 
0x02AE	0xDF5B      	RCALL       _DisplayLCD_Cmd
;DisplayLCD_4bits.c,165 :: 		DisplayLCD_Cmd(0X01);
0x02B0	0x0E01      	MOVLW       1
0x02B2	0x6E36      	MOVWF       FARG_DisplayLCD_Cmd_CmdLCD 
0x02B4	0xDF58      	RCALL       _DisplayLCD_Cmd
;DisplayLCD_4bits.c,168 :: 		}
L_end_DisplayLCD_Init:
0x02B6	0x0012      	RETURN      0
; end of _DisplayLCD_Init
_main:
0x02B8	0xF001EC90  	CALL        800, 0
;DisplayLCD_4bits.c,244 :: 		void main() {
;DisplayLCD_4bits.c,246 :: 		ConfigMCU();
0x02BC	0xDF8C      	RCALL       _ConfigMCU
;DisplayLCD_4bits.c,248 :: 		DisplayLCD_Init();         //Inicializar display no modo 4 bits
0x02BE	0xDFB8      	RCALL       _DisplayLCD_Init
;DisplayLCD_4bits.c,249 :: 		DisplayLCD_Cmd(LCD_Clear);
0x02C0	0x0E01      	MOVLW       1
0x02C2	0x6E36      	MOVWF       FARG_DisplayLCD_Cmd_CmdLCD 
0x02C4	0xDF50      	RCALL       _DisplayLCD_Cmd
;DisplayLCD_4bits.c,250 :: 		DisplayLCD_Out(1,1, "  LCD Display  ");
0x02C6	0x0E01      	MOVLW       1
0x02C8	0x6E32      	MOVWF       FARG_DisplayLCD_Out_Linha 
0x02CA	0x0E01      	MOVLW       1
0x02CC	0x6E33      	MOVWF       FARG_DisplayLCD_Out_Coluna 
0x02CE	0x0E15      	MOVLW       ?lstr1_DisplayLCD_4bits
0x02D0	0x6E34      	MOVWF       FARG_DisplayLCD_Out_TextoLCD 
0x02D2	0x0E00      	MOVLW       hi_addr(?lstr1_DisplayLCD_4bits)
0x02D4	0x6E35      	MOVWF       FARG_DisplayLCD_Out_TextoLCD+1 
0x02D6	0xDF8A      	RCALL       _DisplayLCD_Out
;DisplayLCD_4bits.c,251 :: 		DisplayLCD_Out(2,1, "  4-bit mode");
0x02D8	0x0E02      	MOVLW       2
0x02DA	0x6E32      	MOVWF       FARG_DisplayLCD_Out_Linha 
0x02DC	0x0E01      	MOVLW       1
0x02DE	0x6E33      	MOVWF       FARG_DisplayLCD_Out_Coluna 
0x02E0	0x0E25      	MOVLW       ?lstr2_DisplayLCD_4bits
0x02E2	0x6E34      	MOVWF       FARG_DisplayLCD_Out_TextoLCD 
0x02E4	0x0E00      	MOVLW       hi_addr(?lstr2_DisplayLCD_4bits)
0x02E6	0x6E35      	MOVWF       FARG_DisplayLCD_Out_TextoLCD+1 
0x02E8	0xDF81      	RCALL       _DisplayLCD_Out
;DisplayLCD_4bits.c,252 :: 		DisplayLCD_Chr(2, 13, 'A');
0x02EA	0x0E02      	MOVLW       2
0x02EC	0x6E32      	MOVWF       FARG_DisplayLCD_Chr_Linha 
0x02EE	0x0E0D      	MOVLW       13
0x02F0	0x6E33      	MOVWF       FARG_DisplayLCD_Chr_Coluna 
0x02F2	0x0E41      	MOVLW       65
0x02F4	0x6E34      	MOVWF       FARG_DisplayLCD_Chr_Tchar 
0x02F6	0xDF4F      	RCALL       _DisplayLCD_Chr
;DisplayLCD_4bits.c,253 :: 		DisplayLCD_Chr_Cp('%');
0x02F8	0x0E25      	MOVLW       37
0x02FA	0x6E36      	MOVWF       FARG_DisplayLCD_Chr_Cp_Tchar 
0x02FC	0xDF2E      	RCALL       _DisplayLCD_Chr_Cp
;DisplayLCD_4bits.c,255 :: 		while(1);
L_main17:
0x02FE	0xD7FF      	BRA         L_main17
;DisplayLCD_4bits.c,256 :: 		}
L_end_main:
0x0300	0xD7FF      	BRA         $+0
; end of _main
0x0320	0xF015EE10  	LFSR        1, 21
0x0324	0x0E1D      	MOVLW       29
0x0326	0x6E00      	MOVWF       R0 
0x0328	0x0E01      	MOVLW       1
0x032A	0x6E01      	MOVWF       R1 
0x032C	0x0E02      	MOVLW       2
0x032E	0x6EF6      	MOVWF       4086 
0x0330	0x0E03      	MOVLW       3
0x0332	0x6EF7      	MOVWF       TBLPTRH 
0x0334	0x0E00      	MOVLW       0
0x0336	0x6EF8      	MOVWF       TBLPTRU 
0x0338	0xF000ECEE  	CALL        476, 0
0x033C	0x0012      	RETURN      0
;DisplayLCD_4bits.c,0 :: ?ICS?lstr1_DisplayLCD_4bits
0x0302	0x2020 ;?ICS?lstr1_DisplayLCD_4bits+0
0x0304	0x434C ;?ICS?lstr1_DisplayLCD_4bits+2
0x0306	0x2044 ;?ICS?lstr1_DisplayLCD_4bits+4
0x0308	0x6944 ;?ICS?lstr1_DisplayLCD_4bits+6
0x030A	0x7073 ;?ICS?lstr1_DisplayLCD_4bits+8
0x030C	0x616C ;?ICS?lstr1_DisplayLCD_4bits+10
0x030E	0x2079 ;?ICS?lstr1_DisplayLCD_4bits+12
0x0310	0x0020 ;?ICS?lstr1_DisplayLCD_4bits+14
; end of ?ICS?lstr1_DisplayLCD_4bits
;DisplayLCD_4bits.c,0 :: ?ICS?lstr2_DisplayLCD_4bits
0x0312	0x2020 ;?ICS?lstr2_DisplayLCD_4bits+0
0x0314	0x2D34 ;?ICS?lstr2_DisplayLCD_4bits+2
0x0316	0x6962 ;?ICS?lstr2_DisplayLCD_4bits+4
0x0318	0x2074 ;?ICS?lstr2_DisplayLCD_4bits+6
0x031A	0x6F6D ;?ICS?lstr2_DisplayLCD_4bits+8
0x031C	0x6564 ;?ICS?lstr2_DisplayLCD_4bits+10
0x031E	0x00 ;?ICS?lstr2_DisplayLCD_4bits+12
; end of ?ICS?lstr2_DisplayLCD_4bits
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [36]    _LCD_Enable
0x0040     [282]    _LCD_Write_Data
0x015A      [12]    _DisplayLCD_Chr_Cp
0x0166      [10]    _DisplayLCD_Cmd
0x0170      [38]    _DisplayLCD_Out_Cp
0x0196      [64]    _DisplayLCD_Chr
0x01D6       [6]    _ConfigMCU
0x01DC      [16]    ___CC2DW
0x01EC      [68]    _DisplayLCD_Out
0x0230     [136]    _DisplayLCD_Init
0x02B8      [74]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015      [16]    ?lstr1_DisplayLCD_4bits
0x0025      [13]    ?lstr2_DisplayLCD_4bits
0x0032       [1]    FARG_DisplayLCD_Out_Linha
0x0032       [1]    FARG_DisplayLCD_Chr_Linha
0x0033       [1]    FARG_DisplayLCD_Chr_Coluna
0x0033       [1]    FARG_DisplayLCD_Out_Coluna
0x0034       [2]    FARG_DisplayLCD_Out_TextoLCD
0x0034       [1]    FARG_DisplayLCD_Chr_Tchar
0x0036       [1]    FARG_DisplayLCD_Chr_Cp_Tchar
0x0036       [1]    FARG_DisplayLCD_Cmd_CmdLCD
0x0036       [2]    FARG_DisplayLCD_Out_Cp_Ponteiro
0x0038       [1]    FARG_LCD_Write_Data_RS
0x0039       [1]    FARG_LCD_Write_Data_Data
0x0F39       [1]    ANSELB
0x0F81       [1]    PORTB
0x0F93       [1]    TRISB
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0302      [16]    ?ICS?lstr1_DisplayLCD_4bits
0x0312      [13]    ?ICS?lstr2_DisplayLCD_4bits
//** Label List: ** 
//----------------------------------------------
  L_LCD_Write_Data0
  L_LCD_Enable1
  L_LCD_Enable2
  L_LCD_Enable3
  L_DisplayLCD_Init4
  L_DisplayLCD_Init5
  L_DisplayLCD_Init6
  L_DisplayLCD_Out7
  L_DisplayLCD_Out8
  L_DisplayLCD_Out9
  L_DisplayLCD_Out10
  L_DisplayLCD_Out_Cp11
  L_DisplayLCD_Out_Cp12
  L_DisplayLCD_Chr13
  L_DisplayLCD_Chr14
  L_DisplayLCD_Chr15
  L_DisplayLCD_Chr16
  L_main17
  L_main18
  L_end_LCD_Write_Data
  _LCD_Write_Data
  L__LCD_Write_Data20
  L__LCD_Write_Data21
  L__LCD_Write_Data22
  L__LCD_Write_Data23
  L__LCD_Write_Data24
  L__LCD_Write_Data25
  L__LCD_Write_Data26
  L__LCD_Write_Data27
  L__LCD_Write_Data28
  L__LCD_Write_Data29
  L__LCD_Write_Data30
  L__LCD_Write_Data31
  L__LCD_Write_Data32
  L__LCD_Write_Data33
  L__LCD_Write_Data34
  L__LCD_Write_Data35
  L__LCD_Write_Data36
  L__LCD_Write_Data37
  L_end_LCD_Enable
  _LCD_Enable
  L_end_DisplayLCD_Cmd
  _DisplayLCD_Cmd
  L_end_DisplayLCD_Chr_Cp
  _DisplayLCD_Chr_Cp
  L_end_DisplayLCD_Init
  _DisplayLCD_Init
  L_end_DisplayLCD_Out
  _DisplayLCD_Out
  L_end_DisplayLCD_Out_Cp
  _DisplayLCD_Out_Cp
  L_end_DisplayLCD_Chr
  _DisplayLCD_Chr
  L_end_ConfigMCU
  _ConfigMCU
  L_end_main
  _main
  _CC2D_Loop1
  _CC2DL_Loop1
  L_loopCA2AWs
  L_loopCCA2AWs
  L_loopCS2Ss
  L_CS2Send
  L_loopCCS2Ss
  L_CCS2Send
  L_loopFZinSWs
  L_longjmp7
  L_end___CC2D
  ___CC2D
  L_end___CC2DW
  ___CC2DW
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end_____DoIFC
  _____DoIFC
  L_end_Swap
  _Swap
  L_end_setjmp
  _setjmp
  L_end_longjmp
  _longjmp
